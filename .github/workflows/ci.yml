name: CI

on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [main, develop]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: me
          POSTGRES_PASSWORD: password
          POSTGRES_DB: client
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      matrix:
        app: [client, server]
      fail-fast: false

    defaults:
      run:
        working-directory: ./${{ matrix.app }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: "npm"
          cache-dependency-path: ${{ matrix.app }}/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run linting & formatting
        run: |
          npm run lint
          npm run format

      - name: Run tests
        run: npm test
        env:
          CI: true
          NODE_ENV: ${{ matrix.app == 'server' && 'test' || 'development' }}
          POSTGRES_USER: ${{ matrix.app == 'server' && 'me' || '' }}
          POSTGRES_PASSWORD: ${{ matrix.app == 'server' && 'password' || '' }}
          POSTGRES_DB: ${{ matrix.app == 'server' && 'client' || '' }}
          POSTGRES_HOST: ${{ matrix.app == 'server' && 'localhost' || '' }}
